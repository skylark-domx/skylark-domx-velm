{"version":3,"sources":["velm.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","$","map","Array","prototype","slice","VisualElement","klass","klassName","_construct","node","isString","charAt","createFragment","document","getElementById","this","_elm","query","selector","elm","root","body","velm","mixin","batch","nodes","action","args","forEach","apply","partial","name","fn","props","delegate","names","context","elem","ret","concat","call","arguments","HTMLElement","isArrayLike","el","_delegator","find","descendant","property","method","value","css","event","callback","on","toLowerCase","attach"],"mappings":"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","file":"../velm.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});"]}